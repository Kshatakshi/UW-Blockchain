{"ast":null,"code":"var _jsxFileName = \"/home/kishita/Desktop/ngo_pro/Donation-System-using-Blockchain/pages/organizations/showOrganization.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport Organization from \"../../ethereum/organization.js\";\nimport { Card, Grid, Button, Icon } from \"semantic-ui-react\";\nimport Layout from \"../../components/Layout\";\nimport ContributeForm from \"../../components/ContributeForm\";\nimport web3 from \"../../ethereum/web3\";\nimport { Link } from \"../../routes\";\n\nclass OrganizationShow extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"renderCards\", () => {\n      const items = [{\n        header: \"Donation Amount\",\n        meta: \"Total amount donated in the organization\",\n        description: __jsx(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 22\n          }\n        }, web3.utils.fromWei(this.props.balance, \"ether\")),\n        style: {\n          overflowWrap: \"break-word\"\n        }\n      }, {\n        header: \"Requests\",\n        meta: \"Total Number Of Requests\",\n        description: __jsx(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 22\n          }\n        }, this.props.requests),\n        style: {\n          overflowWrap: \"break-word\"\n        }\n      }, {\n        header: \"Contributors\",\n        meta: \"Number of people who donated\",\n        description: __jsx(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 22\n          }\n        }, this.props.contributors),\n        style: {\n          overflowWrap: \"break-word\"\n        }\n      }, {\n        header: \"Minimum Contibution\",\n        meta: \"Minimum value to contribute\",\n        description: __jsx(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 22\n          }\n        }, this.props.minContributions),\n        style: {\n          overflowWrap: \"break-word\"\n        }\n      }];\n      return __jsx(Card.Group, {\n        items: items,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 12\n        }\n      });\n    });\n  }\n\n  render() {\n    return __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, this.props.name), __jsx(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, __jsx(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }, __jsx(Grid.Column, {\n      width: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, this.renderCards()), __jsx(Grid.Column, {\n      width: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, __jsx(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    }, \"Contribute To This Organization\"), __jsx(ContributeForm, {\n      address: this.props.address,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    }))), __jsx(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, __jsx(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, __jsx(Link, {\n      route: `/organizations/${this.props.address}/requests`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    }, __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, __jsx(Button, {\n      style: {\n        backgroundColor: '#55BCC9',\n        boxShadow: \"0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19)\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 19\n      }\n    }, \"View Requests\"))), __jsx(Link, {\n      route: `/`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }, __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, __jsx(Button, {\n      icon: true,\n      labelPosition: \"left\",\n      style: {\n        backgroundColor: '#55BCC9',\n        boxShadow: \"0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19)\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 19\n      }\n    }, __jsx(Icon, {\n      name: \"left arrow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }), \"Back\")))))));\n  }\n\n}\n\n_defineProperty(OrganizationShow, \"getInitialProps\", async props => {\n  const organization = Organization(props.query.address);\n  const summary = await organization.methods.getSummary().call();\n  const name = await organization.methods.organizationName().call();\n  return {\n    address: props.query.address,\n    minContributions: summary[0],\n    balance: summary[1],\n    requests: summary[2],\n    contributors: summary[3],\n    name: name\n  };\n});\n\nexport default OrganizationShow;","map":{"version":3,"sources":["/home/kishita/Desktop/ngo_pro/Donation-System-using-Blockchain/pages/organizations/showOrganization.js"],"names":["React","Organization","Card","Grid","Button","Icon","Layout","ContributeForm","web3","Link","OrganizationShow","Component","items","header","meta","description","utils","fromWei","props","balance","style","overflowWrap","requests","contributors","minContributions","render","name","renderCards","address","backgroundColor","boxShadow","organization","query","summary","methods","getSummary","call","organizationName"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Organization from \"../../ethereum/organization.js\";\nimport { Card, Grid, Button, Icon } from \"semantic-ui-react\";\nimport Layout from \"../../components/Layout\";\nimport ContributeForm from \"../../components/ContributeForm\";\nimport web3 from \"../../ethereum/web3\";\nimport { Link } from \"../../routes\";\n\nclass OrganizationShow extends React.Component {\n  static getInitialProps = async props => {\n    const organization = Organization(props.query.address);\n    const summary = await organization.methods.getSummary().call();\n    const name = await organization.methods.organizationName().call();\n    return {\n      address: props.query.address,\n      minContributions: summary[0],\n      balance: summary[1],\n      requests: summary[2],\n      contributors: summary[3],\n      name: name\n    };\n  };\n\n  renderCards = () => {\n    const items = [\n      {\n        header: \"Donation Amount\",\n        meta: \"Total amount donated in the organization\",\n        description: <h2>{web3.utils.fromWei(this.props.balance, \"ether\")}</h2>,\n        style: { overflowWrap: \"break-word\" }\n      },\n      {\n        header: \"Requests\",\n        meta: \"Total Number Of Requests\",\n        description: <h2>{this.props.requests}</h2>,\n        style: { overflowWrap: \"break-word\" }\n      },\n      {\n        header: \"Contributors\",\n        meta: \"Number of people who donated\",\n        description: <h2>{this.props.contributors}</h2>,\n        style: { overflowWrap: \"break-word\" }\n      },\n      {\n        header: \"Minimum Contibution\",\n        meta: \"Minimum value to contribute\",\n        description: <h2>{this.props.minContributions}</h2>,\n        style: { overflowWrap: \"break-word\" }\n      }\n    ];\n\n    return <Card.Group items={items} />;\n  };\n  render() {\n    return (\n      <Layout>\n        <h2>{this.props.name}</h2>\n        <Grid>\n          <Grid.Row>\n            <Grid.Column width={10}>{this.renderCards()}</Grid.Column>\n            <Grid.Column width={6}>\n              <h3>Contribute To This Organization</h3>\n              <ContributeForm address={this.props.address} />\n            </Grid.Column>\n          </Grid.Row>\n\n          <Grid.Row>\n            <Grid.Column>\n              <Link route={`/organizations/${this.props.address}/requests`}>\n                <a>\n                  <Button style={{backgroundColor:'#55BCC9', boxShadow: \"0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19)\"}}>View Requests</Button>\n                </a>\n              </Link>\n              <Link route={`/`}>\n                <a>\n                  <Button icon labelPosition=\"left\" style={{backgroundColor:'#55BCC9', boxShadow: \"0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19)\"}}>\n                    <Icon name=\"left arrow\" />\n                    Back\n                  </Button>\n                </a>\n              </Link>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Layout>\n    );\n  }\n}\n\nexport default OrganizationShow;\n"]},"metadata":{},"sourceType":"module"}