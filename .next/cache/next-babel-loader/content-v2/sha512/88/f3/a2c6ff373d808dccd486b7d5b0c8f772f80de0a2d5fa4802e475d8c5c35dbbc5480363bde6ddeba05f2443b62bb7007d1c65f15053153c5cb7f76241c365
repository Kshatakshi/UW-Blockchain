{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\blockchain2\\\\Secure-Donation-using-Blockchain\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Card, Button, Icon } from \"semantic-ui-react\";\nimport Layout from \"../components/Layout\";\nimport factory from \"../ethereum/factory\";\nimport { Link } from \"../routes\";\nimport Organization from \"../ethereum/organization\";\n\nclass Index extends React.Component {\n  static async getInitialProps() {\n    const organizationAddr = await factory.methods.getDeployedOrganizations().call();\n    const organizations = await Promise.all(organizationAddr.map((addr, index) => {\n      const organization = Organization(addr);\n      return organization.methods.getOrganizationDetails().call();\n    }));\n    console.log(organizationAddr);\n    console.log(organizations);\n    return {\n      organizations,\n      organizationAddr\n    };\n  }\n\n  renderOrganizations() {\n    const items = this.props.organizations.map((organization, index) => {\n      return {\n        header: __jsx(\"h1\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 17\n          }\n        }, organization[0]),\n        description: __jsx(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 11\n          }\n        }, __jsx(\"h4\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }\n        }, organization[1], __jsx(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }\n        })), __jsx(Link, {\n          route: `/organizations/${this.props.organizationAddr[index]}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }\n        }, __jsx(\"a\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }\n        }, \"View Organization\"))),\n        fluid: true\n      };\n    });\n    return __jsx(Card.Group, {\n      items: items,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 12\n      }\n    });\n  }\n\n  render() {\n    return __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, \"Open Organizations\"), __jsx(Link, {\n      route: \"/organizations/new\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, __jsx(Button, {\n      floated: \"right\",\n      icon: true,\n      labelPosition: \"left\",\n      primary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, __jsx(Icon, {\n      name: \"add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    }), \"Add Organization\"))), this.renderOrganizations());\n  }\n\n}\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/Lenovo/blockchain2/Secure-Donation-using-Blockchain/pages/index.js"],"names":["React","Card","Button","Icon","Layout","factory","Link","Organization","Index","Component","getInitialProps","organizationAddr","methods","getDeployedOrganizations","call","organizations","Promise","all","map","addr","index","organization","getOrganizationDetails","console","log","renderOrganizations","items","props","header","description","fluid","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,IAAvB,QAAmC,mBAAnC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,SAASC,IAAT,QAAqB,WAArB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;;AAEA,MAAMC,KAAN,SAAoBR,KAAK,CAACS,SAA1B,CAAoC;AAClC,eAAaC,eAAb,GAA+B;AAC7B,UAAMC,gBAAgB,GAAG,MAAMN,OAAO,CAACO,OAAR,CAC5BC,wBAD4B,GAE5BC,IAF4B,EAA/B;AAGA,UAAMC,aAAa,GAAG,MAAMC,OAAO,CAACC,GAAR,CAC1BN,gBAAgB,CAACO,GAAjB,CAAqB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACpC,YAAMC,YAAY,GAAGd,YAAY,CAACY,IAAD,CAAjC;AACA,aAAOE,YAAY,CAACT,OAAb,CAAqBU,sBAArB,GAA8CR,IAA9C,EAAP;AACD,KAHD,CAD0B,CAA5B;AAMAS,IAAAA,OAAO,CAACC,GAAR,CAAYb,gBAAZ;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAYT,aAAZ;AACA,WAAO;AAAEA,MAAAA,aAAF;AAAiBJ,MAAAA;AAAjB,KAAP;AACD;;AAEDc,EAAAA,mBAAmB,GAAG;AACpB,UAAMC,KAAK,GAAG,KAAKC,KAAL,CAAWZ,aAAX,CAAyBG,GAAzB,CAA6B,CAACG,YAAD,EAAeD,KAAf,KAAyB;AAClE,aAAO;AACLQ,QAAAA,MAAM,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKP,YAAY,CAAC,CAAD,CAAjB,CADH;AAELQ,QAAAA,WAAW,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGR,YAAY,CAAC,CAAD,CADf,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,CADF,EAKE,MAAC,IAAD;AACE,UAAA,KAAK,EAAG,kBAAiB,KAAKM,KAAL,CAAWhB,gBAAX,CAA4BS,KAA5B,CAAmC,EAD9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAHF,CALF,CAHG;AAeLU,QAAAA,KAAK,EAAE;AAfF,OAAP;AAiBD,KAlBa,CAAd;AAoBA,WAAO,MAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAEJ,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACDK,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAC,oBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,OAAhB;AAAwB,MAAA,IAAI,MAA5B;AAA6B,MAAA,aAAa,EAAC,MAA3C;AAAkD,MAAA,OAAO,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,qBADF,CADF,CAFF,EAUG,KAAKN,mBAAL,EAVH,CADF;AAcD;;AAtDiC;;AAyDpC,eAAejB,KAAf","sourcesContent":["import React from \"react\";\r\nimport { Card, Button, Icon } from \"semantic-ui-react\";\r\nimport Layout from \"../components/Layout\";\r\nimport factory from \"../ethereum/factory\";\r\nimport { Link } from \"../routes\";\r\nimport Organization from \"../ethereum/organization\";\r\n\r\nclass Index extends React.Component {\r\n  static async getInitialProps() {\r\n    const organizationAddr = await factory.methods\r\n      .getDeployedOrganizations()\r\n      .call();\r\n    const organizations = await Promise.all(\r\n      organizationAddr.map((addr, index) => {\r\n        const organization = Organization(addr);\r\n        return organization.methods.getOrganizationDetails().call();\r\n      })\r\n    );\r\n    console.log(organizationAddr);\r\n    console.log(organizations);\r\n    return { organizations, organizationAddr };\r\n  }\r\n\r\n  renderOrganizations() {\r\n    const items = this.props.organizations.map((organization, index) => {\r\n      return {\r\n        header: <h1>{organization[0]}</h1>,\r\n        description: (\r\n          <div>\r\n            <h4>\r\n              {organization[1]}\r\n              <br />\r\n            </h4>\r\n            <Link\r\n              route={`/organizations/${this.props.organizationAddr[index]}`}\r\n            >\r\n              <a>View Organization</a>\r\n            </Link>\r\n          </div>\r\n        ),\r\n        fluid: true\r\n      };\r\n    });\r\n\r\n    return <Card.Group items={items} />;\r\n  }\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <h2>Open Organizations</h2>\r\n        <Link route=\"/organizations/new\">\r\n          <a>\r\n            <Button floated=\"right\" icon labelPosition=\"left\" primary>\r\n              <Icon name=\"add\" />\r\n              Add Organization\r\n            </Button>\r\n          </a>\r\n        </Link>\r\n        {this.renderOrganizations()}\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}