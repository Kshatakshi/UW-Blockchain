{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\uw\\\\UW-Blockchain\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Card, Button, Icon, Grid, Image } from \"semantic-ui-react\";\nimport Layout from \"../components/Layout\";\nimport factory from \"../ethereum/factory\";\nimport { Link } from \"../routes\";\nimport Organization from \"../ethereum/organization\";\nimport Float from \"../components/Image/svg.svg\";\nimport Float2 from '../components/Image/blockchain.png';\nconst colors = ['#AE8A8C', '#DBBC8E', '#A9C8C0']; // const colors=['Viola',\n// 'Brandy',\n// 'Opal'];\n//const a= colors[Math.floor(Math.random() * colors.length)];\n\nclass Index extends React.Component {\n  static async getInitialProps() {\n    const organizationAddr = await factory.methods.getDeployedOrganizations().call();\n    const organizations = await Promise.all(organizationAddr.map((addr, index) => {\n      const organization = Organization(addr);\n      return organization.methods.getOrganizationDetails().call();\n    }));\n    console.log(organizationAddr);\n    console.log(organizations);\n    return {\n      organizations,\n      organizationAddr\n    };\n  }\n\n  renderOrganizations() {\n    const items = this.props.organizations.map((organization, index) => {\n      return {\n        header: __jsx(Card, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 11\n          }\n        }, __jsx(Card.Content, {\n          style: {\n            backgroundColor: colors[Math.floor(Math.random() * colors.length)],\n            fontWeight: 'bold',\n            height: \"8vh\",\n            color: \"white\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 9\n          }\n        }, __jsx(Card.Header, {\n          style: {\n            color: \"whitesmoke\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 9\n          }\n        }, organization[0]))),\n        description: __jsx(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 14\n          }\n        }, __jsx(\"card\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }\n        }, __jsx(Card.Description, {\n          style: {\n            color: \"grey\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 9\n          }\n        }, organization[1], __jsx(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }\n        })), __jsx(Card.Content, {\n          extra: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 9\n          }\n        }, __jsx(Link, {\n          route: `/organizations/${this.props.organizationAddr[index]}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }\n        }, __jsx(\"a\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }\n        }, \"View Organization\"))))),\n        color: 'grey'\n      };\n    });\n    return __jsx(Card.Group, {\n      items: items,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 8\n      }\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      style: {\n        backgroundImage: `url(\"https://i.pinimg.com/564x/cc/a1/f1/cca1f16b945651b503ccc55b6536aeb5.jpg\")`,\n        height: \"100vh\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }, __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }, __jsx(Link, {\n      route: \"/organizations/new\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, __jsx(\"a\", {\n      style: {\n        display: \"flex\",\n        float: \"right\",\n        alignContent: \"flex-end\",\n        alignItems: \"right\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, __jsx(Button, {\n      style: {\n        marginTop: '18px',\n        backgroundColor: '#55BCC9',\n        border: \"none\",\n        boxShadow: \"0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19)\"\n      },\n      ui: true,\n      secondary: true,\n      button: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, __jsx(Icon, {\n      style: {\n        color: \"white\"\n      },\n      name: \"add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }), \"Add Organization\"))), __jsx(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        position: 'relative'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }, __jsx(\"img\", {\n      className: \"bg\",\n      src: Float,\n      alt: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }), __jsx(\"img\", {\n      className: \"bg2\",\n      src: Float2,\n      alt: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }), __jsx(\"img\", {\n      className: \"bg3\",\n      src: Float2,\n      alt: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    })), __jsx(\"div\", {\n      className: \"mob\",\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"head\",\n      style: {\n        position: 'absolute',\n        zIndex: 10,\n        marginTop: '-60vh'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, __jsx(\"h2\", {\n      style: {\n        marginLeft: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, \"Open Organizations\"), this.renderOrganizations()))));\n  }\n\n}\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/Lenovo/uw/UW-Blockchain/pages/index.js"],"names":["React","Card","Button","Icon","Grid","Image","Layout","factory","Link","Organization","Float","Float2","colors","Index","Component","getInitialProps","organizationAddr","methods","getDeployedOrganizations","call","organizations","Promise","all","map","addr","index","organization","getOrganizationDetails","console","log","renderOrganizations","items","props","header","backgroundColor","Math","floor","random","length","fontWeight","height","color","description","render","backgroundImage","display","float","alignContent","alignItems","marginTop","border","boxShadow","flexDirection","justifyContent","position","zIndex","marginLeft"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Card, Button, Icon, Grid , Image} from \"semantic-ui-react\";\r\nimport Layout from \"../components/Layout\";\r\nimport factory from \"../ethereum/factory\";\r\nimport { Link } from \"../routes\";\r\nimport Organization from \"../ethereum/organization\";\r\nimport Float from \"../components/Image/svg.svg\";\r\nimport Float2 from '../components/Image/blockchain.png';\r\nconst colors=['#AE8A8C',\r\n  '#DBBC8E',\r\n  '#A9C8C0'];\r\n  // const colors=['Viola',\r\n  // 'Brandy',\r\n  // 'Opal'];\r\n//const a= colors[Math.floor(Math.random() * colors.length)];\r\n\r\n\r\n\r\nclass Index extends React.Component {\r\n  static async getInitialProps() {\r\n    const organizationAddr = await factory.methods\r\n      .getDeployedOrganizations()\r\n      .call();\r\n    const organizations = await Promise.all(\r\n      organizationAddr.map((addr, index) => {\r\n        const organization = Organization(addr);\r\n        return organization.methods.getOrganizationDetails().call();\r\n      })\r\n    );\r\n    console.log(organizationAddr);\r\n    console.log(organizations);\r\n    return { organizations, organizationAddr };\r\n  }\r\n\r\n  \r\n\r\n  renderOrganizations() {\r\n    \r\n    const items = this.props.organizations.map((organization, index) => {\r\n      \r\n      return {\r\n        header: (\r\n          \r\n          <Card  >\r\n           \r\n        {/* <Image src='https://react.semantic-ui.com/images/avatar/large/a.png' wrapped ui={false} /> */}\r\n        \r\n        <Card.Content  style={{backgroundColor:colors[Math.floor(Math.random() * colors.length)], fontWeight:'bold', height:\"8vh\", color:\"white\"}}>\r\n        <Card.Header style={{color:\"whitesmoke\"}} >{organization[0]}</Card.Header>\r\n          {/* <h1 >{organization[0]}</h1> */}\r\n        </Card.Content>\r\n          </Card>\r\n        ),\r\n        description: (\r\n             <div >\r\n              <card>\r\n\r\n        <Card.Description style={{ color:\"grey\"}}>\r\n          {organization[1]}\r\n          <br />\r\n        </Card.Description>\r\n        <Card.Content extra>\r\n\r\n            <Link\r\n              route={`/organizations/${this.props.organizationAddr[index]}`}\r\n            >\r\n              \r\n              <a >View Organization</a>\r\n            </Link>\r\n        </Card.Content>\r\n\r\n     \r\n      </card>\r\n          \r\n </div>),\r\n color:'grey'\r\n \r\n\r\n          };\r\n     \r\n    });\r\nreturn <Card.Group  items={items} /> \r\n         \r\n  }\r\n  render() {\r\n    return (\r\n      <div style={{backgroundImage:`url(\"https://i.pinimg.com/564x/cc/a1/f1/cca1f16b945651b503ccc55b6536aeb5.jpg\")`, height:\"100vh\"}}>\r\n      <Layout >\r\n       \r\n        <Link route=\"/organizations/new\">\r\n          \r\n      \r\n          <a   style={{ display: \"flex\", float:\"right\",alignContent:\"flex-end\", alignItems: \"right\" }}>\r\n            <Button style={{marginTop: '18px',backgroundColor:'#55BCC9', border: \"none\", boxShadow: \"0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19)\"}} ui secondary button >\r\n\r\n              <Icon  style={{color:\"white\" }}  name=\"add\" />\r\n              Add Organization\r\n            </Button>\r\n          </a>\r\n         \r\n        </Link>\r\n        <div style={{display: 'flex', flexDirection: 'row', justifyContent:'space-between', position: 'relative'}}>\r\n        <img className=\"bg\"  src={Float} alt='logo'/>\r\n        <img className=\"bg2\" src={Float2} alt='logo'/>\r\n        <img className=\"bg3\" src={Float2} alt='logo'/>\r\n        </div>\r\n        <div className=\"mob\" align=\"left\" >\r\n          <div className=\"head\" style={{position: 'absolute', zIndex: 10, marginTop: '-60vh'}}>\r\n            <h2 style={{marginLeft: \"10px\"}} >Open Organizations</h2>\r\n                  {this.renderOrganizations()}\r\n          </div>    \r\n        </div>\r\n       \r\n      </Layout>\r\n      {/* <style jsx>{`\r\n      .mob{\r\n        padding: '50%';\r\n      }\r\n      `}</style> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}