{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Lenovo/uw/UW-Blockchain/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Lenovo/uw/UW-Blockchain/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:/Users/Lenovo/uw/UW-Blockchain/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/Lenovo/uw/UW-Blockchain/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/Lenovo/uw/UW-Blockchain/node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/Lenovo/uw/UW-Blockchain/node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/Lenovo/uw/UW-Blockchain/node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\uw\\\\UW-Blockchain\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport { Card, Button, Icon, Grid, Image } from \"semantic-ui-react\";\nimport Layout from \"../components/Layout\";\nimport factory from \"../ethereum/factory\";\nimport { Link } from \"../routes\";\nimport Organization from \"../ethereum/organization\";\nimport Float from \"../components/Image/svg.svg\";\nimport Float2 from '../components/Image/blockchain.png';\nvar colors = ['#AE8A8C', '#DBBC8E', '#A9C8C0']; // const colors=['Viola',\n// 'Brandy',\n// 'Opal'];\n//const a= colors[Math.floor(Math.random() * colors.length)];\n\nvar Index = /*#__PURE__*/function (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  var _super = _createSuper(Index);\n\n  function Index() {\n    _classCallCheck(this, Index);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Index, [{\n    key: \"renderOrganizations\",\n    value: function renderOrganizations() {\n      var _this = this;\n\n      var items = this.props.organizations.map(function (organization, index) {\n        return {\n          header: __jsx(Card, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 11\n            }\n          }, __jsx(Card.Content, {\n            style: {\n              backgroundColor: colors[Math.floor(Math.random() * colors.length)],\n              fontWeight: 'bold',\n              height: \"8vh\",\n              color: \"white\"\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 9\n            }\n          }, __jsx(Card.Header, {\n            style: {\n              color: \"whitesmoke\"\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 9\n            }\n          }, organization[0]))),\n          description: __jsx(\"div\", {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 14\n            }\n          }, __jsx(\"card\", {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }\n          }, __jsx(Card.Description, {\n            style: {\n              color: \"grey\"\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 9\n            }\n          }, organization[1], __jsx(\"br\", {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 11\n            }\n          })), __jsx(Card.Content, {\n            extra: true,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 9\n            }\n          }, __jsx(Link, {\n            route: \"/organizations/\".concat(_this.props.organizationAddr[index]),\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 13\n            }\n          }, __jsx(\"a\", {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }\n          }, \"View Organization\"))))),\n          color: 'grey'\n        };\n      });\n      return __jsx(Card.Group, {\n        itemsPerRow: 3,\n        items: items,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 8\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        style: {\n          backgroundImage: \"url(\\\"https://i.pinimg.com/564x/cc/a1/f1/cca1f16b945651b503ccc55b6536aeb5.jpg\\\")\",\n          height: \"100vh\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 7\n        }\n      }, __jsx(Layout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 7\n        }\n      }, __jsx(Link, {\n        route: \"/organizations/new\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }\n      }, __jsx(\"a\", {\n        style: {\n          display: \"flex\",\n          \"float\": \"right\",\n          alignContent: \"flex-end\",\n          alignItems: \"right\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }\n      }, __jsx(Button, {\n        style: {\n          marginTop: '18px',\n          backgroundColor: '#55BCC9',\n          border: \"none\",\n          boxShadow: \"0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19)\"\n        },\n        ui: true,\n        secondary: true,\n        button: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }\n      }, __jsx(Icon, {\n        style: {\n          color: \"white\"\n        },\n        name: \"add\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }\n      }), \"Add Organization\"))), __jsx(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          position: 'relative'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }\n      }, __jsx(\"img\", {\n        className: \"bg\",\n        src: Float,\n        alt: \"logo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }\n      }), __jsx(\"img\", {\n        className: \"bg2\",\n        src: Float2,\n        alt: \"logo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }\n      }), __jsx(\"img\", {\n        className: \"bg3\",\n        src: Float2,\n        alt: \"logo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }\n      })), __jsx(\"div\", {\n        className: \"mob\",\n        align: \"left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        className: \"head\",\n        style: {\n          position: 'absolute',\n          zIndex: 10,\n          marginTop: '-60vh'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }\n      }, __jsx(\"h2\", {\n        style: {\n          marginLeft: \"10px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }\n      }, \"Open Organizations\"), this.renderOrganizations()))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var organizationAddr, organizations;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return factory.methods.getDeployedOrganizations().call();\n\n              case 2:\n                organizationAddr = _context.sent;\n                _context.next = 5;\n                return Promise.all(organizationAddr.map(function (addr, index) {\n                  var organization = Organization(addr);\n                  return organization.methods.getOrganizationDetails().call();\n                }));\n\n              case 5:\n                organizations = _context.sent;\n                console.log(organizationAddr);\n                console.log(organizations);\n                return _context.abrupt(\"return\", {\n                  organizations: organizations,\n                  organizationAddr: organizationAddr\n                });\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps() {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return Index;\n}(React.Component);\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/Lenovo/uw/UW-Blockchain/pages/index.js"],"names":["React","Card","Button","Icon","Grid","Image","Layout","factory","Link","Organization","Float","Float2","colors","Index","items","props","organizations","map","organization","index","header","backgroundColor","Math","floor","random","length","fontWeight","height","color","description","organizationAddr","backgroundImage","display","alignContent","alignItems","marginTop","border","boxShadow","flexDirection","justifyContent","position","zIndex","marginLeft","renderOrganizations","methods","getDeployedOrganizations","call","Promise","all","addr","getOrganizationDetails","console","log","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Card, Button, Icon, Grid , Image} from \"semantic-ui-react\";\r\nimport Layout from \"../components/Layout\";\r\nimport factory from \"../ethereum/factory\";\r\nimport { Link } from \"../routes\";\r\nimport Organization from \"../ethereum/organization\";\r\nimport Float from \"../components/Image/svg.svg\";\r\nimport Float2 from '../components/Image/blockchain.png';\r\nconst colors=['#AE8A8C',\r\n  '#DBBC8E',\r\n  '#A9C8C0'];\r\n  // const colors=['Viola',\r\n  // 'Brandy',\r\n  // 'Opal'];\r\n//const a= colors[Math.floor(Math.random() * colors.length)];\r\n\r\n\r\n\r\nclass Index extends React.Component {\r\n  static async getInitialProps() {\r\n    const organizationAddr = await factory.methods\r\n      .getDeployedOrganizations()\r\n      .call();\r\n    const organizations = await Promise.all(\r\n      organizationAddr.map((addr, index) => {\r\n        const organization = Organization(addr);\r\n        return organization.methods.getOrganizationDetails().call();\r\n      })\r\n    );\r\n    console.log(organizationAddr);\r\n    console.log(organizations);\r\n    return { organizations, organizationAddr };\r\n  }\r\n\r\n  \r\n\r\n  renderOrganizations() {\r\n    \r\n    const items = this.props.organizations.map((organization, index) => {\r\n      \r\n      return {\r\n        header: (\r\n          \r\n          <Card  >\r\n           \r\n        {/* <Image src='https://react.semantic-ui.com/images/avatar/large/a.png' wrapped ui={false} /> */}\r\n        \r\n        <Card.Content  style={{backgroundColor:colors[Math.floor(Math.random() * colors.length)], fontWeight:'bold', height:\"8vh\", color:\"white\"}}>\r\n        <Card.Header style={{color:\"whitesmoke\"}} >{organization[0]}</Card.Header>\r\n          {/* <h1 >{organization[0]}</h1> */}\r\n        </Card.Content>\r\n          </Card>\r\n        ),\r\n        description: (\r\n             <div >\r\n              <card>\r\n\r\n        <Card.Description style={{ color:\"grey\"}}>\r\n          {organization[1]}\r\n          <br />\r\n        </Card.Description>\r\n        <Card.Content extra>\r\n\r\n            <Link\r\n              route={`/organizations/${this.props.organizationAddr[index]}`}\r\n            >\r\n              \r\n              <a >View Organization</a>\r\n            </Link>\r\n        </Card.Content>\r\n\r\n     \r\n      </card>\r\n          \r\n </div>),\r\n color:'grey'\r\n \r\n\r\n          };\r\n     \r\n    });\r\nreturn <Card.Group itemsPerRow={3} items={items} /> \r\n         \r\n  }\r\n  render() {\r\n    return (\r\n      <div style={{backgroundImage:`url(\"https://i.pinimg.com/564x/cc/a1/f1/cca1f16b945651b503ccc55b6536aeb5.jpg\")`, height:\"100vh\"}}>\r\n      <Layout >\r\n       \r\n        <Link route=\"/organizations/new\">\r\n          \r\n      \r\n          <a   style={{ display: \"flex\", float:\"right\",alignContent:\"flex-end\", alignItems: \"right\" }}>\r\n            <Button style={{marginTop: '18px',backgroundColor:'#55BCC9', border: \"none\", boxShadow: \"0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19)\"}} ui secondary button >\r\n\r\n              <Icon  style={{color:\"white\" }}  name=\"add\" />\r\n              Add Organization\r\n            </Button>\r\n          </a>\r\n         \r\n        </Link>\r\n        <div style={{display: 'flex', flexDirection: 'row', justifyContent:'space-between', position: 'relative'}}>\r\n        <img className=\"bg\"  src={Float} alt='logo'/>\r\n        <img className=\"bg2\" src={Float2} alt='logo'/>\r\n        <img className=\"bg3\" src={Float2} alt='logo'/>\r\n        </div>\r\n        <div className=\"mob\" align=\"left\" >\r\n          <div className=\"head\" style={{position: 'absolute', zIndex: 10, marginTop: '-60vh'}}>\r\n            <h2 style={{marginLeft: \"10px\"}} >Open Organizations</h2>\r\n                  {this.renderOrganizations()}\r\n          </div>    \r\n        </div>\r\n       \r\n      </Layout>\r\n      {/* <style jsx>{`\r\n      .mob{\r\n        padding: '50%';\r\n      }\r\n      `}</style> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}